// Generated by CoffeeScript 1.6.1
(function() {
  var NotesViewModel;

  NotesViewModel = function($scope, $rootScope, $compile) {
    $scope.newnote = {};
    $scope.unwatchers = {};
    $scope.$watch('newnote.comment', function(value) {
      var _ref;
      if (((_ref = $scope.newnote) != null ? _ref.comment : void 0) == null) {
        return;
      }
      if (!$scope.notes.get($scope.newnote.id)) {
        return;
      }
      $scope.notes.get($scope.newnote.id).comment = value;
      return $scope.comments.create({
        id: $scope.newnote.id,
        text: value
      });
    });
    $scope.appendNote = function(note, inProgress) {
      var code, notesDiv;
      code = "<div class='note draggable' data-id='" + note.id + "'>                    <a href='javascript:;' ng-click='onDeleteClick(" + note.id + ")' class='delete-note'>Delete</a>                    <div class='note-comment'>                        <span id='arrow'></span>                        <div class='note-content'>                            <div class='comment-text ui-selectee'>" + note.comment + "</div>                        </div>                    </div>                </div>";
      code = $(code);
      if (inProgress) {
        code.addClass('note-new');
      }
      notesDiv = $('.notes');
      notesDiv.append(code);
      $compile(notesDiv.contents())($scope);
      return $rootScope.interactivity.activate_note($scope.notes, code);
    };
    $scope.getComment = function(id) {
      var _ref;
      return (_ref = $scope.comments.get(id)) != null ? _ref.text : void 0;
    };
    $scope.onUpdateComment = function(comment) {
      if ($scope.newnote.comment === comment.text && !comment.text) {
        return;
      }
      if ($("div.note[data-id=" + comment.id + "] .note-comment textarea").length === 0) {
        return $("div.note[data-id=" + comment.id + "] .note-content").text(comment.text);
      } else {
        return $("div.note[data-id=" + comment.id + "] .note-comment textarea").val(comment.text);
      }
    };
    $scope.onUpdate = function(note, inProgress) {
      var canCreate;
      if ($("div.note[data-id='" + note.id + "']").length === 0) {
        canCreate = $scope.newnote != null ? note.id !== $scope.newnote.id : true;
        if (canCreate) {
          $scope.appendNote(note, inProgress);
        }
      }
      return $("div.note[data-id='" + note.id + "']").css({
        top: note.top,
        left: note.left,
        width: note.width,
        height: note.height
      });
    };
    $scope.onDelete = function(id) {
      $("div.note[data-id='" + id + "']").fadeOut(durations.fadeout).remove();
      return $scope.comments.pop(id);
    };
    $scope.onDeleteClick = function(id) {
      var wasReal, _ref;
      wasReal = ((_ref = $scope.notes.get(id)) != null ? _ref.id : void 0) != null;
      if (wasReal) {
        $scope.notes.commitDelete(id);
      }
      return $scope.notes["delete"](id);
    };
    $scope.onCreate = function(note, oldId) {
      var new_note;
      $scope.notes["delete"](oldId);
      $scope.notes.create(_.extend(note, {
        inProgress: false
      }));
      $scope.comments.create({
        text: note.comment,
        id: note.id
      });
      new_note = $("div[data-id=" + note.id + "]");
      return new_note.find('div.note-content').html("<div class='comment-text'>" + note.comment + "</div>");
    };
    $scope.onUpdateAside = function(data) {
      return $('aside').html(data);
    };
    $scope.onAdd = function() {
      $scope.notes.data[$scope.newnote.id].comment = $scope.notes.data[$scope.newnote.id].comment || "New note by " + $('#userdata').data('current-user-email');
      $scope.comments.create({
        id: $scope.newnote.id,
        text: $scope.notes.data[$scope.newnote.id].comment
      });
      $(".note[data-id=" + $scope.newnote.id + "]").removeClass('note-new').find(".note-content").html("<div class='comment-text'>" + $scope.notes.data[$scope.newnote.id].comment + "</div>");
      $scope.comments.commitCreate($scope.newnote.id);
      return $scope.newnote = {};
    };
    $scope.onUpdateScrollPos = function(data) {
      return $('.screenshot-portrait').scrollTop(data.pos);
    };
    $scope.onUpdateExistingComment = function(id) {
      var note;
      note = $("div.note[data-id=" + id + "]");
      note.find(".note-comment").html("<span id='arrow'></span>                                                        <div class='note-content'>                                                            <div class='comment-text ui-selectee'>" + ($scope.notes.get(id).comment) + "</div>                                                        </div>");
      $scope.notes.commitUpdate($scope.notes.get(id));
      $scope.comments.update($scope.comments.data[id]);
      return $scope.unwatchers[id]();
    };
    return $(function() {
      window.server = new window.ServerService(window.pusher, $scope);
      $scope.notes = new Notes($scope, window.pusherService, window.server);
      $scope.comments = new Comments($scope, window.pusherService, window.server, $scope.notes);
      $("div.note").each(function() {
        return $rootScope.interactivity.activate_note($scope.notes, $(this));
      });
      return $(".delete-note").click(function() {
        return $scope.onDeleteClick($(this).parent('.note').data('id'));
      });
    });
  };

  (typeof window !== "undefined" && window !== null ? window : exports).NotesViewModel = NotesViewModel;

}).call(this);
