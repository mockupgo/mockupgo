// Generated by CoffeeScript 1.6.1
(function() {

  window.module.directive('showNotifications', function() {
    return function(scope, element, attrs) {
      return scope.$watch('notifications', function(value) {
        return angular.forEach(value, function(notification, index) {
          var bLogIn, code, container, email, html, id, message;
          if ($(".flash-message-box #" + index).length) {
            return;
          }
          id = notification.id;
          email = notification.email;
          bLogIn = notification.bLogIn;
          container = $("<div>", {
            "class": "flash-message",
            style: "display:none",
            id: "presence_" + id
          });
          message = id === scope.userNotifications.me.id ? "You (" + email + ")" : "" + email + " has";
          message += bLogIn ? " logged" : " exited";
          code = "<i class='icon-user icon-white' id='" + index + "'></i> " + message;
          html = container.html(code).fadeIn(window.durations.fadein).delay(window.durations.delay).fadeOut(window.durations.fadeout, function() {
            return $(".flash-message-box #" + index).parent().remove();
          });
          $('.flash-message-box').append(html);
          return delete scope.notifications[index];
        });
      }, true);
    };
  });

  window.module.config(function($compileProvider) {
    return $compileProvider.directive('noteCreationTriggers', function($compile, $rootScope) {
      return function(scope, element, attrs) {
        return $(element).selectable({
          start: function(event) {
            if ($(event.toElement).hasClass("delete-note")) {
              return;
            }
            if (scope.newnote != null) {
              scope.notes["delete"](scope.newnote.id);
              $("div.note[data-id='" + scope.newnote.id + "']").remove();
            }
            scope.newnote = {
              width: 0,
              height: 0,
              top: event.clientY,
              left: event.clientX,
              comment: ""
            };
            scope.notes.create(scope.newnote);
            return $rootScope.interactivity.start_realtime_update_for_create(scope.notes, scope.comments, scope.newnote, event);
          },
          stop: function(event) {
            var code, et, helper, note_height, note_left, note_top, note_width, notesDiv, offset, scroll_from_top;
            if ($(event.toElement).hasClass("delete-note")) {
              return;
            }
            $rootScope.interactivity.stop_realtime_update_for_create(scope.newnote, event);
            et = $(event.target);
            code = "<div class='note-new note draggable' data-id='" + scope.newnote.id + "'>                                <a href='javascript:;' ng-click='onDeleteClick(" + scope.newnote.id + ")' class='delete-note'>Delete</a>                                <div class='note-comment'>                                    <span id='arrow'></span>                                    <div class='note-content'>                                        <div id='comment_bar' class='input_bar'>                                            <form method='post' action=''>                                                <div class='textarea'>                                                    <textarea name='comment' ng-model='newnote.comment' id='comment' class='replace' rows='3'></textarea>                                                </div>                                                <button type='submit' ng-click='onAdd()' class='black create-button'>                                                    Add Note                                                </button>                                            </form>                                        </div>                                    </div>                                </div>                            </div>";
            helper = $("div.ui-selectable-helper");
            offset = et.offset();
            scroll_from_top = parseInt(et.scrollTop());
            note_width = parseInt(helper.css('width'));
            note_height = parseInt(helper.css('height'));
            note_top = parseInt(helper.css('top')) - parseInt(offset.top) + scroll_from_top;
            note_left = parseInt(helper.css('left')) - parseInt(offset.left);
            if (note_width < 4 && note_height < 4) {
              return;
            }
            notesDiv = $('.notes');
            notesDiv.append(code);
            $compile(notesDiv.contents())(scope);
            $rootScope.interactivity.activate_note(scope.notes, $("div.note[data-id='" + scope.newnote.id + "']"));
            return $("div.note[data-id='" + scope.newnote.id + "']").css({
              top: note_top,
              left: note_left,
              width: note_width,
              height: note_height
            });
          }
        });
      };
    });
  });

  window.module.config(function($compileProvider) {
    return $compileProvider.directive('noteCommentUpdateTrigger', function($compile) {
      return function(scope, element, attrs) {
        return $(document).on("click", ".note-comment", function() {
          var comment, id, note;
          comment = $(this);
          note = comment.parents('.note');
          id = note.attr('data-id');
          if (note.hasClass('note-new')) {
            return;
          }
          scope.$apply(function() {
            if (comment.find("textarea").length > 0) {
              return;
            }
            comment.html("<span id='arrow'></span>                                    <div class='note-content'>                                        <div id='comment_bar' class='input_bar'>                                            <form method='post' action=''>                                                <div class='textarea'>                                                    <textarea name='comment' ng-model='comments.data[" + id + "].text' id='comment' class='replace' rows='3'></textarea>                                                </div>                                                <button type='submit' ng-click='onUpdateExistingComment(" + id + ")' class='black create-button'>                                                    Update                                                </button>                                            </form>                                        </div>                                    </div>");
            return $compile(comment.contents())(scope);
          });
          return scope.unwatchers[id] = scope.$watch("comments.data[" + id + "]", function(value) {
            if (value == null) {
              return;
            }
            scope.notes.get(value.id).comment = value.text;
            return scope.comments.update(value);
          }, true);
        });
      };
    });
  });

}).call(this);
