//@ sourceMappingURL=mockupgo\app\assets\javascripts\mockupgo\app\assets\javascripts\server.map
// Generated by CoffeeScript 1.6.1
(function() {
  var ServerService,
    _this = this;

  ServerService = (function() {

    function ServerService(pusher, notesViewModel) {
      var _this = this;
      this.pusher = pusher;
      this.notesViewModel = notesViewModel;
      this["delete"] = function(id) {
        return ServerService.prototype.delete.apply(_this, arguments);
      };
      this.update = function(note) {
        return ServerService.prototype.update.apply(_this, arguments);
      };
      this.create = function(note) {
        return ServerService.prototype.create.apply(_this, arguments);
      };
    }

    ServerService.prototype.getComments = function(callback) {
      var comments,
        _this = this;
      comments = [];
      $(".comment-text").each(function(i, c) {
        var comment, id;
        comment = $(c);
        id = comment.parents('.note').data('id');
        return comments.push({
          text: comment.text(),
          id: id
        });
      });
      return callback(comments);
    };

    ServerService.prototype.getNotes = function(callback) {
      var notes,
        _this = this;
      notes = {};
      $('.note').each(function(i, n) {
        var id, note;
        note = $(n);
        id = note.data('id');
        return notes[id] = {
          id: id,
          left: parseInt(note.css('left')),
          top: parseInt(note.attr('top')),
          width: parseInt(note.attr('width')),
          height: parseInt(note.attr('height')),
          comment: note.find('.comment-text').text()
        };
      });
      return callback(notes);
    };

    ServerService.prototype.create = function(note) {
      var image_version,
        _this = this;
      image_version = $('.current-version div[data-image-version]').attr("data-image-version");
      return $.ajax('/annotations', {
        type: 'POST',
        dataType: 'JSON',
        data: {
          socket_id: this.pusher.connection.socket_id,
          image_version: image_version,
          comment: note.comment,
          position: {
            top: note.top,
            left: note.left,
            width: note.width,
            height: note.height
          }
        },
        success: function(data) {
          _this.notesViewModel.onCreate(data);
          return _this.update_aside(image_version);
        }
      });
    };

    ServerService.prototype.update = function(note) {
      return $.ajax("/annotations/" + note.id, {
        type: 'PUT',
        dataType: 'JSON',
        data: {
          position: {
            top: note.top,
            left: note.left,
            width: note.width,
            height: note.height
          }
        }
      });
    };

    ServerService.prototype["delete"] = function(id) {
      return $.ajax("/annotations/" + id, {
        type: 'DELETE',
        dataType: 'SCRIPT'
      });
    };

    ServerService.prototype.update_aside = function(image_version) {
      return $.ajax("/image_versions/" + image_version + "/aside", {
        type: 'GET',
        dataType: 'HTML',
        success: this.notesViewModel.onUpdateAside
      });
    };

    return ServerService;

  })();

  (typeof window !== "undefined" && window !== null ? window : exports).ServerService = ServerService;

}).call(this);
