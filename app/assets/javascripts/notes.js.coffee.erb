$ ->
    Pusher.log = (message) ->
      window.console.log message  if window.console and window.console.log

    WEB_SOCKET_DEBUG = true

    channel = pusher.subscribe("my-channel-image-version-" + image_version_id)

    # add_member = (member) ->
    #     # console.log("Adding: " + member.info.email)
    #     # window.connected_user_count = window.connected_user_count + 1
    #     # $('.connected-users-count').text(window.connected_user_count)
    #     # $('ul .connected-users-list').append('<li id="member_' + member.id + '">' + member.info.email + '</li>')
    #     container = $("<div>",
    #         class: "flash-message",
    #         style: "display: none",
    #         id: "presence_" + member.id)
    #     $('.flash-message-box').append(container.html("<i class='icon-user icon-white'></i> " + member.info.email + " has joined").fadeIn(1000).delay(1500).fadeOut(1000))



    # remove_member = (member) ->
    #     console.log("Removing: " + member.info.email)
    #     window.connected_user_count = window.connected_user_count - 1
    #     $('.connected-users-count').text(window.connected_user_count)
    #     $('ul .connected-users-list #member_' + member.id).fadeOut(100)
    #     container = $("<div>",
    #         class: "flash-message",
    #         style: "display: none",
    #         id: "presence_" + member.id)
    #     $('.flash-message-box').append(container.html("<i class='icon-user icon-white'></i> " + member.info.email + " has left").fadeIn(1000).delay(1500).fadeOut(1000))


    channel.bind "alert-note", (data) ->
        alert(data)


    channel.bind "delete-note", (data) ->
        $("div.note[data-id='" + data.message + "']").fadeOut()

    channel.bind "update-note", (data) ->
        note = $("div.note[data-id='" + data.id + "']")
        note.css "top", data.top + "px"
        note.css "left", data.left + "px"
        note.css "width", data.width + "px"
        note.css "height", data.height + "px"
        note.find(".comment-text").html data.comment



    channel_rt.bind "client-new-note-comment-in-progress", (data) ->
        note = $("div.note[data-id='" + data.id + "']")
        note.find(".comment-text").html data.comment

    channel_rt.bind "client-delete-note-in-progress", (data) ->
        $("div.note[data-id='" + data.id + "']").fadeOut().remove()


    channel_rt.bind "client-update-note-position", (data) ->
        note = $("div.note[data-id='" + data.id + "']")
        note.css "top", data.top
        note.css "left", data.left


    channel_rt.bind "client-update-note-size", (data) ->
        note = $("div.note[data-id='" + data.id + "']")
        note.css "width", data.width
        note.css "height", data.height

    channel_rt.bind "client-update-scroll-pos", (data) ->
        window.current_scroll = data.pos
        $('.screenshot-portrait').scrollTop(data.pos)


    channel_rt.bind "create-note", (data) ->
        window.console.log "create note"
        window.console.log data
        note = data.message
        already_existing_notes = $('.note[data-id="' + note.id + '"]')
        if already_existing_notes.length == 0
            $("div.note[data-id='999']").remove()
            new_note = $(".notes").append "<div class='note' data-id='" + note.id + "' style='top: " + note.top + "px; left: " + note.left + "px; width: " + note.width + "px; height: " + note.height + "px; '><span class='black note-counter'> x </span> <a class='delete-note' href='#' style='display: block; '>Delete</a> <div class='note-wrapper '> <div class='note-comment'> <span id='arrow'></span> <div class='note-content'><div class='comment-text'>" + note.comment + "</div></div></div></div></div>"
            activate_note($('.note[data-id="' + note.id + '"]'))

    channel_rt.bind "client-new-note-in-progress", (note) ->
        if $('.note[data-id="' + note.id + '"]').length == 0
            window.console.log "creating note in progress"
            new_note = $(".notes").append "<div class='note' data-id='" + note.id + "' style='opacity: 0.8; top: " + note.top + "px; left: " + note.left + "px; width: " + note.width + "px; height: " + note.height + "px; '><span class='black note-counter'> x </span> <a class='delete-note' href='#' style='display: block; '>Delete</a> <div class='note-wrapper '> <div class='note-comment'> <span id='arrow'></span> <div class='note-content'><div class='comment-text'>" + note.comment + "</div></div></div></div></div>"
        else
            note_html = $("div.note[data-id='" + note.id + "']")
            note_html.css "top", note.top
            note_html.css "left", note.left
            note_html.css "width", note.width
            note_html.css "height", note.height


activate_note = (note) ->
    window.console.log "activate_note"
    window.console.log note.length
    note.draggable(
        start: (event) ->
            start_realtime_pos_update $(this), event
        stop:  (event) ->
            stop_realtime_pos_update $(this), event
            update_note_pos $(this), event
    )
    note.resizable(
        start: (event) ->
            start_realtime_size_update $(this), event
        stop: (event) ->
            stop_realtime_size_update $(this), event
            update_note_pos $(this), event
    )
    note.bind
        mouseenter: ->
            $(this).find('a.delete-note').clearQueue().fadeIn(100)
        mouseleave: ->
            $(this).find('a.delete-note').clearQueue().fadeOut(100)

update_note_pos = (note, event) ->
    id = note.data('id')
    $.ajax '/annotations/' + id,
        type: 'PUT'
        dataType: 'JSON'
        data:
            position:
                top:    note.css('top')
                left:   note.css('left')
                width:  note.css('width')
                height: note.css('height')

interval_timer = ''

start_realtime_pos_update = (note, event) ->
    id = note.data('id')
    window.console.log("start realtime update")
    window.current_note = note
    window.current_note_id = id
    interval_timer = setInterval((note, id) ->
            window.channel_rt.trigger "client-update-note-position",
                "id":   window.current_note_id,
                "top":  window.current_note.css('top'),
                "left": window.current_note.css('left'),
        , 200)

stop_realtime_pos_update = (note, event) ->
    clearInterval(interval_timer)
    window.console.log("stop realtime update")



start_realtime_size_update = (note, event) ->
    id = note.data('id')
    window.console.log("start realtime update")
    window.current_note = note
    window.current_note_id = id
    interval_timer = setInterval((note, id) ->
            window.channel_rt.trigger "client-update-note-size",
                "id":     window.current_note_id,
                "width":  window.current_note.css('width'),
                "height": window.current_note.css('height'),
        , 200)

stop_realtime_size_update = (note, event) ->
    clearInterval(interval_timer)
    window.console.log("stop realtime update")

# UPDATE SCROLL
# window.current_scroll = 0
# scroll_interval_timer = setInterval( ->
#         new_scroll = $('.screenshot-portrait').scrollTop()
#         if window.current_scroll != new_scroll
#             window.current_scroll = new_scroll
#             window.channel_rt.trigger "client-update-scroll-pos",
#                 "pos": new_scroll
#     , 300)


update_note_comment = (note, comment) ->
    id = note.data('id')
    $.ajax '/annotations/' + id,
        type: 'PUT'
        dataType: 'JSON'
        data:
            comment: comment
        success: (data) ->
            note.find('div.note-content').html('<div class="comment-text">' + comment + '</div>')
            $('.note-new').removeClass('note-new')

update_aside = (image_version) ->
    $.ajax '/image_versions/' + image_version + '/aside'
        type: 'GET'
        dataType: 'HTML'
        success: (data) ->
            $('aside').html(data)

jQuery ->
    $(".selectable").selectable
        start: (event) ->
            # Only one new note should be active at one time
            $('div.note-new').remove()
            start_realtime_update_for_create $(this), event
        stop: (event, ui) ->
            stop_realtime_update_for_create $(this), event
            et = $(event.target)
            et.find('.notes').append('<div class="note-new note draggable" data-id="999"><a href="#" class="delete-note">Delete</a><div class="note-comment"><span id="arrow"></span><div class="note-content"><div id="comment_bar" class="input_bar"><form method="post" action=""><div class="textarea"><textarea name="comment" id="comment" class="replace" rows="3"></textarea></div><button type="submit" class="black create-button">Add Note</button></form></div></div></div></div>')
            activate_note $('.note-new') # WHICH NOTES ?
            helper = $("div.ui-selectable-helper")
            offset = et.offset()
            scroll_from_top = parseInt(et.scrollTop())
            note_width  = parseInt(helper.css('width'))
            note_height = parseInt(helper.css('height'))
            note_top    = parseInt(helper.css('top')) - parseInt(offset.top) + scroll_from_top
            note_left   = parseInt(helper.css('left')) - parseInt(offset.left)

            if note_width < 4 and note_height < 4
                return


            $('.note-new').css
                top:    note_top
                left:   note_left
                width:  note_width
                height: note_height

            $('.note-new textarea#comment').focus()
            $('.note-new textarea#comment').keyup () ->
                window.console.log window.curent_user_email + ": " +$(this).val()
                window.channel_rt.trigger "client-new-note-comment-in-progress",
                    "id":     "999",
                    "comment":  "<u>" + window.curent_user_email + ":</u> " +$(this).val(),


    start_realtime_update_for_create = (note, event) ->
        window.console.log("start realtime update")
        # window.current_note = $("div.ui-selectable-helper")
        # window.console.log(window.current_note.css('width'))
        window.current_note_id = 999
        userdata = $('#userdata')
        window.curent_user_id    = userdata.data('current-user-id')
        window.curent_user_email = userdata.data('current-user-email')
        interval_timer = setInterval((note, id) ->
                helper = $("div.ui-selectable-helper")
                et = $(".ui-selectable")
                offset = et.offset()
                scroll_from_top = parseInt(et.scrollTop())
                note_width  = parseInt(helper.css('width'))
                note_height = parseInt(helper.css('height'))
                note_top    = parseInt(helper.css('top')) - parseInt(offset.top) + scroll_from_top
                note_left   = parseInt(helper.css('left')) - parseInt(offset.left)
                window.channel_rt.trigger "client-new-note-in-progress",
                    "id":   window.current_note_id,
                    "width":  note_width,
                    "height": note_height,
                    "top":  note_top,
                    "left": note_left,
                    "comment": "New note by " + window.curent_user_email,
            , 200)

    stop_realtime_update_for_create = (note, event) ->
        clearInterval(interval_timer)
        window.console.log("stop realtime update")


    # Get ready to receive note creation button events
    $(document).on 'click', 'div.note-comment button.create-button', (event) ->
        event.preventDefault()

        screenshot = $(event.target).closest('.image-container')
        comment = screenshot.find('div.note-new textarea#comment').val()
        helper  = screenshot.find('div.note-new')

        $.ajax '/annotations',
            type: 'POST'
            dataType: 'JSON'
            data:
                socket_id: pusher.connection.socket_id
                image_version: screenshot.data('image-version')
                comment: comment
                position:
                    top:    helper.css('top')
                    left:   helper.css('left')
                    width:  helper.css('width')
                    height: helper.css('height')
            success: (data) ->
                new_note = $('div.note-new')
                console.log("received new note")
                new_note.find('div.note-content').html('<div class="comment-text">' + comment + '</div>')
                new_note.removeClass('note-new').attr('data-id', data.id)
                update_aside(screenshot.data('image-version'))

    # Setup note deletion
    $(document).on 'click', 'a.delete-note', (event) ->
        event.preventDefault()
        screenshot = $(event.target).closest('.image-container')
        $(this).parent().fadeOut()
        note_id = $(this).parent().data('id')
        window.channel_rt.trigger "client-delete-note-in-progress",
            "id":   note_id
        $.ajax '/annotations/' + $(this).parent().data('id'),
            type: 'DELETE'
            dataType: 'SCRIPT'
        update_aside(screenshot.data('image-version'))


    # Setup note edition
    $(document).on 'click', 'div.comment-text', (event) ->
        event.preventDefault()
        current_note = $(this).text()
        note_id = $(this).closest('div.note').data('id')
        note_field = $(this).closest('div.note-content')
                            .html('<div id="comment_bar" class="input_bar"><form method="post" action=""><div class="textarea"><textarea name="comment" id="comment" class="replace" rows="3"></textarea></div><button type="submit" class="black update-button">Update</button></form></div>')
                            .find('textarea')
        note_field.val(current_note)
        userdata = $('#userdata')
        window.curent_user_id    = userdata.data('current-user-id')
        window.curent_user_email = userdata.data('current-user-email')
        note_field.keyup () ->
            window.console.log window.curent_user_email + ": " +$(this).val()
            window.channel_rt.trigger "client-new-note-comment-in-progress",
                    "id":     note_id,
                    "comment":  "<u>" + window.curent_user_email + ":</u> " +$(this).val(),


    # Setup note save action
    $(document).on 'click', 'button.update-button', (event) ->
        event.preventDefault()
        screenshot = $(event.target).closest('.image-container')
        new_comment = $(this).parent().find('textarea').val()
        note  = $(this).closest('div.note')
        update_note_comment(note, new_comment)
        update_aside(screenshot.data('image-version'))


    # Loading existing notes
    # TODO: NEED TO LOAD PORTRAIT AND LANDSCAPE NOTES FOR IPHONE AND IPAD
    # $.ajax '/notes'
    #   type: 'GET'
    #   dataType: 'HTML'
    #   data:
    #       mockup: $('#page-content').data('mockup') ####
    #   success: (data) ->
    #       $('#notes').html(data) ####
    activate_note $('.note')
    $('a.delete-note').hide()
