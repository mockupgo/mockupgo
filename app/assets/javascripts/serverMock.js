// Generated by CoffeeScript 1.6.1
(function() {
  var ServerMock;

  ServerMock = (function() {

    function ServerMock(pushers) {
      this.pushers = pushers;
      this.notes = {};
    }

    ServerMock.prototype.create = function(note) {
      var pusher, _i, _len, _ref, _results;
      this.notes[note.id] = note;
      _ref = this.pushers;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        pusher = _ref[_i];
        _results.push(pusher.send("create-note", note));
      }
      return _results;
    };

    ServerMock.prototype.update = function(note) {
      var pusher, _i, _len, _ref, _results;
      this.notes[note.id] = note;
      _ref = this.pushers;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        pusher = _ref[_i];
        _results.push(pusher.send("update-note", note));
      }
      return _results;
    };

    ServerMock.prototype["delete"] = function(id) {
      var pusher, _i, _len, _ref;
      _ref = this.pushers;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        pusher = _ref[_i];
        pusher.send("delete-note", this.notes[id]);
      }
      return delete this.notes[id];
    };

    ServerMock.prototype.getNotes = function(callback) {
      return callback(this.notes);
    };

    ServerMock.prototype.getComments = function(callback) {
      var comments, n;
      comments = [];
      for (n in this.notes) {
        comments.push({
          text: n.comment,
          id: n.id
        });
      }
      return callback(comments);
    };

    return ServerMock;

  })();

  module.exports = ServerMock;

}).call(this);
